@page "/ReceiptForm"

@using AzureFormRecog.Services
@using BlazorInputFile
@using AzureFormRecog.Data

@using Azure
@using Azure.AI.FormRecognizer
@using Azure.AI.FormRecognizer.Models
@inject IFileUpload fileupload



<PageTitle>Receipt Regognizer</PageTitle>
<h3>Receipt Form</h3>

<BlazorInputFile.InputFile OnChange="SelectFile"></BlazorInputFile.InputFile>

<div>
   @FilePath
</div>


<hr />
@if (InvoiceMainFields == null)
{
    <p><em>Data Loading...</em></p>
}
else
{
   <label>Doc Main Fields</label>
    <table style="width:100%;">
        
         <tr>
            <td>Field ID</td>
            <td>Field Value</td>
        </tr>
    @foreach(var doc in InvoiceMainFields)
    {
        <tr>
            <td>@doc.DocFieldId</td>
            <td>@doc.DocFieldValue</td>
        </tr>
    }
    </table>
    <hr />

    
}


@code {
     public List<DocModel> InvoiceMainFields;

     string FilePath = "No File Uploaded";

     static string endpoint = "https://formrecogmetam.cognitiveservices.azure.com/";
          static  string apiKey = "4016270d4d8b494e93d355e07cf8ac57";
           static AzureKeyCredential credential = new AzureKeyCredential(apiKey);


           async Task SelectFile(IFileListEntry[]  files)
        {
            var file = files.FirstOrDefault();
            if (file != null)
            {
                await fileupload.UploadFile(file);
              
                 FilePath = "C:\\Users\\MedNourBn\\Downloads\\FormRecog\\AzureFormRecog\\UploadloadedFiles\\" + file.Name;
                
                  using var stream = new FileStream(FilePath, FileMode.Open);

                  var client = new FormRecognizerClient(new Uri(endpoint), credential);
            RecognizeReceiptsOperation   operation = await client.StartRecognizeReceiptsAsync(stream);

            Response<RecognizedFormCollection> operationResponse = await operation.WaitForCompletionAsync();
            RecognizedFormCollection receiptss = operationResponse.Value;
            RecognizedForm receipt = receiptss.Single();

            InvoiceMainFields = new List<DocModel>();

            foreach (var doc in receipt.Fields)
            {

                if (doc.Value.ValueData != null)
                {
                    DocModel obj = new DocModel();
                    obj.DocFieldId = doc.Key;
                    obj.DocFieldValue = doc.Value.ValueData.Text;
                    InvoiceMainFields.Add(obj);
                }
            }
            

            }
        }
}
